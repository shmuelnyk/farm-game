security:
    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: email
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    encoders:
        App\Entity\User:
            algorithm: argon2i
            memory_cost: 16384
            time_cost: 3
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            provider: user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        login:
            stateless: true
            anonymous: true
            provider: user_provider
            json_login:
                check_path: /login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
